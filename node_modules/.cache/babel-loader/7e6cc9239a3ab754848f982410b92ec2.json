{"ast":null,"code":"var _jsxFileName = \"/home/ryan/coding_projects/social-media-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport { Overlay, Popover } from 'react-bootstrap';\nimport LandingPage from './Components/SplashPage';\nimport UserProfile from './Components/UserProfile';\nimport UserLoginPage from './Components/LoginPage';\nimport NavigatonBar from './Components/Navigation';\nimport { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport profileWoman from './images/userImages/profile-woman.jpg';\nimport profileMan1 from './images/userImages/profile-man1.jpg';\nimport profileMan2 from './images/userImages/profile-man2.jpg';\nimport profileMan3 from './images/userImages/profile-man3.jpg';\nimport { useBootstrapBreakpoints } from 'react-bootstrap/esm/ThemeProvider';\nimport { Tooltip } from 'bootstrap';\nimport { Alert } from 'bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  function generateId() {\n    return Math.floor((1 + Math.random()) * 1000);\n  }\n\n  const [usersState, setUser] = useState({\n    userList: [{\n      id: generateId(),\n      isOnline: false,\n      firstName: 'Charles',\n      lastName: 'Zoidberg',\n      userName: 'soccerfan1',\n      password: 'password1',\n      interests: 'soccer,movies,games',\n      hobbies: 'video games,biking,sailing',\n      favoriteShows: 'Will & Grace, Rick and Morty, Hawaii Five-0',\n      status: 'Taking the dog for a walk!',\n      image: profileMan1\n    }, {\n      id: generateId(),\n      isOnline: true,\n      firstName: 'Nick',\n      lastName: 'Thompson',\n      userName: 'guccimaner',\n      password: 'guccifan1',\n      interests: 'rap,gym,women',\n      hobbies: 'shopping,driving fast cars,being a chad',\n      favoriteShows: 'Nitro Circus, Jackass, Ridiculousness',\n      status: `Mudd'in with the boyz - AYOOOO`,\n      image: profileMan2\n    }, {\n      id: generateId(),\n      isOnline: false,\n      firstName: 'Florence',\n      lastName: 'Smith',\n      userName: 'fancypants92',\n      password: 'louisvutton1',\n      interests: 'money,luxury,fine dining',\n      hobbies: 'watch fitting,suit tailoring,arguing over the pronunciation of escargot',\n      favoriteShows: 'Luxury Ads,Cribs,Sex and the City',\n      status: 'Enjoying a spa day!',\n      image: profileMan3\n    }, {\n      id: generateId(),\n      isOnline: true,\n      firstName: 'Kelly',\n      lastName: 'Roe',\n      userName: 'kelly92',\n      password: 'raptorsfan1',\n      interests: 'sports,shopping,travel',\n      hobbies: 'going on cruises,hiking,learning new cultures',\n      favoriteShows: 'Parts Unknown,SportsCenter,Mad Money',\n      status: 'Hoping to get this job promotion!',\n      image: profileWoman\n    }]\n  });\n  console.log(usersState);\n  const [activeUser, activeUserState] = useState({});\n\n  function isActiveUser(userRequested, event) {\n    // userRequested= {userName:'soccerfan1',password:'password1'}\n    console.log(userRequested);\n    usersState.userList.filter(user => {\n      if (userRequested.userName === user.userName && userRequested.password === user.password) {\n        user.isOnline = 'true';\n        activeUserState(user);\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: \"Logged In Successful!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 10\n        }, this);\n      }\n    });\n  } //have this be called when a user opens up profile page and when user completes sign in page - hard code for testing\n\n\n  console.log({\n    activeUser\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavigatonBar, {\n      userId: activeUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: '/profile/' + activeUser.id,\n        element: /*#__PURE__*/_jsxDEV(UserProfile, {\n          user: activeUser,\n          userList: usersState.userList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        element: /*#__PURE__*/_jsxDEV(UserLoginPage, {\n          activeUserCheck: isActiveUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rtHXW+CBBW+oplnBh8yNIRDkP0A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ryan/coding_projects/social-media-app/src/App.js"],"names":["React","ReactDOM","Route","Routes","Overlay","Popover","LandingPage","UserProfile","UserLoginPage","NavigatonBar","useState","useEffect","profileWoman","profileMan1","profileMan2","profileMan3","useBootstrapBreakpoints","Tooltip","Alert","App","generateId","Math","floor","random","usersState","setUser","userList","id","isOnline","firstName","lastName","userName","password","interests","hobbies","favoriteShows","status","image","console","log","activeUser","activeUserState","isActiveUser","userRequested","event","filter","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport { Overlay, Popover } from 'react-bootstrap';\nimport LandingPage from './Components/SplashPage';\nimport UserProfile from './Components/UserProfile';\nimport UserLoginPage from './Components/LoginPage';\nimport NavigatonBar from './Components/Navigation';\nimport { useState,useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport profileWoman from './images/userImages/profile-woman.jpg'\nimport profileMan1 from './images/userImages/profile-man1.jpg'\nimport profileMan2 from './images/userImages/profile-man2.jpg'\nimport profileMan3 from './images/userImages/profile-man3.jpg'\nimport { useBootstrapBreakpoints } from 'react-bootstrap/esm/ThemeProvider';\nimport { Tooltip } from 'bootstrap';\nimport { Alert } from 'bootstrap';\n\n\n\nfunction App() {\n\n  function generateId () {\n    return Math.floor((1 + Math.random()) * 1000)\n  }\n\n  const [usersState,setUser] = useState({\n    userList: [\n      {\n        id: generateId(),\n        isOnline: false,\n        firstName: 'Charles',\n        lastName: 'Zoidberg',\n        userName: 'soccerfan1',\n        password: 'password1',\n        interests: 'soccer,movies,games',\n        hobbies: 'video games,biking,sailing',\n        favoriteShows: 'Will & Grace, Rick and Morty, Hawaii Five-0',\n        status:'Taking the dog for a walk!',\n        image: profileMan1\n      },\n      {\n        id: generateId(),\n        isOnline: true,\n        firstName: 'Nick',\n        lastName: 'Thompson',\n        userName: 'guccimaner',\n        password: 'guccifan1',\n        interests: 'rap,gym,women',\n        hobbies: 'shopping,driving fast cars,being a chad',\n        favoriteShows: 'Nitro Circus, Jackass, Ridiculousness',\n        status:`Mudd'in with the boyz - AYOOOO`,\n        image: profileMan2\n      },\n      {\n        id: generateId(),\n        isOnline: false,\n        firstName: 'Florence',\n        lastName: 'Smith',\n        userName: 'fancypants92',\n        password: 'louisvutton1',\n        interests: 'money,luxury,fine dining',\n        hobbies: 'watch fitting,suit tailoring,arguing over the pronunciation of escargot',\n        favoriteShows: 'Luxury Ads,Cribs,Sex and the City',\n        status:'Enjoying a spa day!',\n        image: profileMan3\n      },\n      {\n        id: generateId(),\n        isOnline: true,\n        firstName: 'Kelly',\n        lastName: 'Roe',\n        userName: 'kelly92',\n        password: 'raptorsfan1',\n        interests: 'sports,shopping,travel',\n        hobbies: 'going on cruises,hiking,learning new cultures',\n        favoriteShows: 'Parts Unknown,SportsCenter,Mad Money',\n        status:'Hoping to get this job promotion!',\n        image: profileWoman\n      },\n    ]\n  })\n\n  console.log(usersState);\n  \n const [activeUser,activeUserState] = useState({})\n\n  function isActiveUser (userRequested,event) {\n    // userRequested= {userName:'soccerfan1',password:'password1'}\n    console.log(userRequested);\n    usersState.userList.filter(user => {\n      if (userRequested.userName === user.userName && userRequested.password === user.password) {\n       user.isOnline = 'true'\n       activeUserState(user)\n       return (\n         <Alert variant='success'>\n           <Alert.Heading>Logged In Successful!</Alert.Heading>\n         </Alert>\n       )\n      }\n    })\n  }\n\n    //have this be called when a user opens up profile page and when user completes sign in page - hard code for testing\n\n    console.log({activeUser});\n\n  return (\n    <div className=\"App\">\n    <NavigatonBar userId={activeUser.id}/> \n    {/* we pass activeUser id to our nav bar so it can change url dynamically */}\n\n\n    <Routes>\n  <Route\n  path={'/profile/' + activeUser.id}\n  element={<UserProfile user={activeUser} userList={usersState.userList} />}\n  />\n  <Route \n  path='/sign-in'\n  element={<UserLoginPage activeUserCheck={isActiveUser} />}\n  />\n  <Route\n  path='/'\n  element={<LandingPage />}\n  />\n</Routes>\n\n    </div>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}